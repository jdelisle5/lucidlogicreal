#pragma checksum "C:\repos\lucidlogicreal\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "27aedb2329b8aa1fedaafa780cf86ae081253e02"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(LucidLogic.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(LucidLogic.Pages.Pages_Index), null)]
namespace LucidLogic.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\repos\lucidlogicreal\Pages\_ViewImports.cshtml"
using LucidLogic;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"27aedb2329b8aa1fedaafa780cf86ae081253e02", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f2a5d062a8027e92ac37a25e3cc4839c80fce9c2", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\repos\lucidlogicreal\Pages\Index.cshtml"
  
ViewData["Title"] = "LucidLogic Home";

#line default
#line hidden
            BeginContext(73, 8150, true);
            WriteLiteral(@"

<div class=""container"">
  <div class=""row mt-3 pl-0"">
    <div class=""col-md-7"">
      <div class=""text-left"">
        <h1 class=""section-header"">WTF Is Lucid Logic</h1>
        This blog post shows a few different types of content that’s supported and styled with Bootstrap. Basic
        typography, images, and code are all supported.

        Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam.
        Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis
        consectetur purus sit amet fermentum.

        Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id
        nibh ultricies vehicula ut id elit.

        Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia
        bibendum nulla sed consectetur.
        <p></p>

        <p>        This blog post shows a");
            WriteLiteral(@" few different types of content that’s supported and styled with Bootstrap. Basic
            typography, images, and code are all supported.
    
            Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Aenean eu leo quam.
            Pellentesque ornare sem lacinia quam venenatis vestibulum. Sed posuere consectetur est at lobortis. Cras mattis
            consectetur purus sit amet fermentum.
    
            Curabitur blandit tempus porttitor. Nullam quis risus eget urna mollis ornare vel eu leo. Nullam id dolor id
            nibh ultricies vehicula ut id elit.
    
            Etiam porta sem malesuada magna mollis euismod. Cras mattis consectetur purus sit amet fermentum. Aenean lacinia
            bibendum nulla sed consectetur.</p>
      </div>
    </div>

    <div class=""col"">
      <div class=""card mb-1"">
        <div class=""card-horizontal"">
          <div class=""img-thumbnail"">
            <img class="""" src=""../Lucid Logic.png"" alt=""Card ");
            WriteLiteral(@"image cap"" style=""width:200px;height:200px;"">
          </div>
          <div class=""card-body"">
            <h4 class=""card-title"">Card title</h4>
            <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the
              card's content.</p>
          </div>
        </div>
      </div>
      <div class=""card mb-1"">
          <div class=""card-horizontal"">
            <div class=""img-thumbnail"">
              <img class="""" src=""../images/Lucid Logic.png"" alt=""Card image cap"" style=""width:200px;height:200px;"">
            </div>
            <div class=""card-body"">
              <h4 class=""card-title"">Card title</h4>
              <p class=""card-text"">Some quick example text to build on the card title and make up the bulk of the
                card's content.</p>
            </div>
          </div>
        </div>
    </div>
  </div>
</div>

<div class=""container"">
<div class=""row"">
  <div class=""col"">
      <img class="""" src=""../imag");
            WriteLiteral(@"es/mysticwolves.jpg"" alt=""Card image cap"" style=""width:300px;height:300px;"">
  </div>
</div>

</div>

<!-- <div class=""containter"">
    <header class=""blog-header py-3"">Lucid Logic</h1>
    <div class=""row flex-nowrap justify-content-between align-items-center"">
        <div class=""col-4 pt-1"">
            <a class=""text-muted"" href=""#"">Subscribe</a>
        </div>
        <div class=""col-4 text-center"">
            <a class=""blog-header-logo text-dark"" href=""#""<Large</a>
        </div>
    </div>
    </header>

    <div>
            <p>Creating a new Lucid Logic Page. Learn about <a href=""https://docs.microsoft.com/aspnet/core"">building Web apps with ASP.NET Core</a>.</p>
    </div>
</div> -->


<!-- <div class=""container""> -->
<!-- <header class=""blog-header py-3"">
    <div class=""row flex-nowrap justify-content-between align-items-center"">
      <div class=""col-4 pt-1"">
        <a class=""text-muted"" href=""#"">Subscribe</a>
      </div>
      <div class=""col-4 text-center"">
   ");
            WriteLiteral(@"     <a class=""blog-header-logo text-dark"" href=""#"">Large</a>
      </div>
      <div class=""col-4 d-flex justify-content-end align-items-center"">
        <a class=""text-muted"" href=""#"">
          <svg xmlns=""http://www.w3.org/2000/svg"" width=""20"" height=""20"" fill=""none"" stroke=""currentColor"" stroke-linecap=""round"" stroke-linejoin=""round"" stroke-width=""2"" class=""mx-3"" role=""img"" viewBox=""0 0 24 24"" focusable=""false""><title>Search</title><circle cx=""10.5"" cy=""10.5"" r=""7.5""></circle><path d=""M21 21l-5.2-5.2""></path></svg>
        </a>
        <a class=""btn btn-sm btn-outline-secondary"" href=""#"">Sign up</a>
      </div>
    </div>
  </header>

  <div class=""nav-scroller py-1 mb-2"">
    <nav class=""nav d-flex justify-content-between"">
      <a class=""p-2 text-muted"" href=""#"">World</a>
      <a class=""p-2 text-muted"" href=""#"">U.S.</a>
      <a class=""p-2 text-muted"" href=""#"">Technology</a>
      <a class=""p-2 text-muted"" href=""#"">Design</a>
      <a class=""p-2 text-muted"" href=""#"">Culture</a>
   ");
            WriteLiteral(@"   <a class=""p-2 text-muted"" href=""#"">Business</a>
      <a class=""p-2 text-muted"" href=""#"">Politics</a>
      <a class=""p-2 text-muted"" href=""#"">Opinion</a>
      <a class=""p-2 text-muted"" href=""#"">Science</a>
      <a class=""p-2 text-muted"" href=""#"">Health</a>
      <a class=""p-2 text-muted"" href=""#"">Style</a>
      <a class=""p-2 text-muted"" href=""#"">Travel</a>
    </nav>
  </div>

  <div class=""jumbotron p-4 p-md-5 text-white rounded bg-dark"">
    <div class=""col-md-6 px-0"">
      <h1 class=""display-4 font-italic"">Title of a longer featured blog post</h1>
      <p class=""lead my-3"">Multiple lines of text that form the lede, informing new readers quickly and efficiently about what’s most interesting in this post’s contents.</p>
      <p class=""lead mb-0""><a href=""#"" class=""text-white font-weight-bold"">Continue reading...</a></p>
    </div>
  </div>

  <div class=""row mb-2"">
    <div class=""col-md-6"">
      <div class=""row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-");
            WriteLiteral(@"sm h-md-250 position-relative"">
        <div class=""col p-4 d-flex flex-column position-static"">
          <strong class=""d-inline-block mb-2 text-primary"">World</strong>
          <h3 class=""mb-0"">Featured post</h3>
          <div class=""mb-1 text-muted"">Nov 12</div>
          <p class=""card-text mb-auto"">This is a wider card with supporting text below as a natural lead-in to additional content.</p>
          <a href=""#"" class=""stretched-link"">Continue reading</a>
        </div>
        <div class=""col-auto d-none d-lg-block"">
          <svg class=""bd-placeholder-img"" width=""200"" height=""250"" xmlns=""http://www.w3.org/2000/svg"" preserveAspectRatio=""xMidYMid slice"" focusable=""false"" role=""img"" aria-label=""Placeholder: Thumbnail""><title>Placeholder</title><rect width=""100%"" height=""100%"" fill=""#55595c""></rect><text x=""50%"" y=""50%"" fill=""#eceeef"" dy="".3em"">Thumbnail</text></svg>
        </div>
      </div>
    </div>
    <div class=""col-md-6"">
      <div class=""row no-gutters border rounded overflo");
            WriteLiteral(@"w-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative"">
        <div class=""col p-4 d-flex flex-column position-static"">
          <strong class=""d-inline-block mb-2 text-success"">Design</strong>
          <h3 class=""mb-0"">Post title</h3>
          <div class=""mb-1 text-muted"">Nov 11</div>
          <p class=""mb-auto"">This is a wider card with supporting text below as a natural lead-in to additional content.</p>
          <a href=""#"" class=""stretched-link"">Continue reading</a>
        </div>
        <div class=""col-auto d-none d-lg-block"">
          <svg class=""bd-placeholder-img"" width=""200"" height=""250"" xmlns=""http://www.w3.org/2000/svg"" preserveAspectRatio=""xMidYMid slice"" focusable=""false"" role=""img"" aria-label=""Placeholder: Thumbnail""><title>Placeholder</title><rect width=""100%"" height=""100%"" fill=""#55595c""></rect><text x=""50%"" y=""50%"" fill=""#eceeef"" dy="".3em"">Thumbnail</text></svg>
        </div>
      </div>
    </div>
  </div>
</div> -->");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
